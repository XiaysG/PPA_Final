chicagonewhousingpermit <- chicagonewhousingpermit %>%
mutate(issue_date = as.Date(issue_datenumeric, format = "%Y-%m-%d"))
chicagonewhousingpermit <- chicagonewhousingpermit %>%
mutate(issue_date = as.Date(issue_date, format = "%Y-%m-%d"))
chicagonewhousingpermit <- chicagonewhousingpermit %>%
mutate(issue_date = as.Date(issue_date, format = "%Y-%m-%d"))
select(issue_date, id)
chicagonewhousingpermit <- chicagonewhousingpermit %>%
mutate(issue_datenu = as.Date(issue_date, format = "%Y-%m-%d"))
select(issue_datenu, id)
View(chicagonewhousingpermit)
chicagonewhousingpermit <- chicagonewhousingpermit %>%
mutate(issue_datenu = as.Date(issue_date, format = "%Y-%m-%d"))
dplyr::select(issue_datenu, id)
chicagonewhousingpermit <- chicagonewhousingpermit %>%
mutate(issue_datenu = as.Date(issue_date, format = "%Y-%m-%d"))
# Filter to include only rows from the years 2010 to 2015
df_2010_to_2015 <- chicagonewhousingpermit  %>%
filter(between(as.integer(format(issue_date, "%Y")), 2010, 2015))
View(df_2010_to_2015)
df_2010_to_2015 <- df_2010_to_2015 %>%
dplyr::select(issue_date)
View(df_2010_to_2015)
chicagonewhousingpermit <- chicagonewhousingpermit %>%
mutate(issue_datenu = as.Date(issue_date, format = "%Y-%m-%d"))
# Filter to include only rows from the years 2010 to 2015
df_2010_to_2015 <- chicagonewhousingpermit  %>%
filter(between(as.integer(format(issue_date, "%Y")), 2010, 2015))
df_2010_to_2015 <- df_2010_to_2015 %>%
dplyr::select(issue_date,id)
View(df_2010_to_2015)
chicagonewhousingpermit <- chicagonewhousingpermit %>%
mutate(issue_datenu = as.Date(issue_date, format = "%Y-%m-%d"))
# Filter to include only rows from the years 2010 to 2015
df_2010_to_2015 <- chicagonewhousingpermit  %>%
filter(between(as.integer(format(issue_date, "%Y")), 2010, 2015))
df_2010_to_2015 <- df_2010_to_2015 %>%
dplyr::select(issue_date,id,longtitude,latitude)
chicagonewhousingpermit <- chicagonewhousingpermit %>%
mutate(issue_datenu = as.Date(issue_date, format = "%Y-%m-%d"))
# Filter to include only rows from the years 2010 to 2015
df_2010_to_2015 <- chicagonewhousingpermit  %>%
filter(between(as.integer(format(issue_date, "%Y")), 2010, 2015))
df_2010_to_2015 <- df_2010_to_2015 %>%
dplyr::select(issue_date,id,longitude,latitude)
chicagogrocerystore_sf <- st_as_sf(df_2010_to_2015, coords = c("longitude", "latitude"), crs = 4326, agr = "constant")%>%
st_transform('ESRI:102271')
df_2010_to_2015 <- df_2010_to_2015 %>%
dplyr::select(issue_date,id,longitude,latitude)%>%
na.omit()
chicagogrocerystore_sf <- st_as_sf(df_2010_to_2015, coords = c("longitude", "latitude"), crs = 4326, agr = "constant")%>%
st_transform('ESRI:102271')
View(df_2010_to_2015)
View(chicagogrocerystore_sf)
## Restaurant
restaurantchicago <- read.socrata("https://data.cityofchicago.org/resource/5udb-dr6f.json")
View(restaurantchicago)
restaurantchicago <- restaurantchicago %>%
dplyr::select(Y = latitude, X = longitude) %>%
na.omit() %>%
st_as_sf(coords = c("X", "Y"), crs = 4326, agr = "constant") %>% # Transforming to the specified CRS
st_transform('ESRI:102271')
View(restaurantchicago)
educationfacilitieschicago <- read.socrata("https://data.cityofchicago.org/resource/kqmn-byj8.json")
View(educationfacilitieschicago)
#educsation
schoolchicago <- read.socrata("https://data.cityofchicago.org/resource/95e9-uzwt.json")
View(schoolchicago)
#educsation
schoolchicago <- read.socrata("https://data.cityofchicago.org/resource/95e9-uzwt.json")
schoolchicago <- schoolchicago %>%
dplyr::select(y = latitude, x = longitude) %>%
na.omit() %>%
st_as_sf(coords = c("x", "y"), crs = 4326, agr = "constant")%>%  # Transforming to the specified CRS
st_transform('ESRI:102271')
schoolchicago <- read.socrata("https://data.cityofchicago.org/resource/95e9-uzwt.json")
schoolchicago <- schoolchicago %>%
dplyr::select(y, x) %>%
na.omit() %>%
st_as_sf(coords = c("x", "y"), crs = 4326, agr = "constant")%>%  # Transforming to the specified CRS
st_transform('ESRI:102271')
View(schoolchicago)
#educsation
schoolchicago <- read.socrata("https://data.cityofchicago.org/resource/95e9-uzwt.json")
schoolchicago <- schoolchicago %>%
dplyr::select(y = latitude, x= longitude) %>%
na.omit() %>%
st_as_sf(coords = c("x", "y"), crs = 4326, agr = "constant")%>%  # Transforming to the specified CRS
st_transform('ESRI:102271')
schoolchicago <- schoolchicago %>%
dplyr::select(y = latitude, x = longitude) %>%
na.omit() %>%
st_as_sf(coords = c("x", "y"), crs = 4326, agr = "constant")%>%  # Transforming to the specified CRS
st_transform('ESRI:102271')
View(chicagogrocerystore_sf)
View(chicagogrocerystore)
View(restaurantchicago)
View(restaurantchicago)
View(schoolchicago)
schoolchicago <- schoolchicago %>%
dplyr::select(y = latitude, x = longitude) %>%
na.omit() %>%
st_as_sf(coords = c("x", "y"), crs = 4326, agr = "constant")%>%  # Transforming to the specified CRS
st_transform('ESRI:102271')
# If you are renaming columns
schoolchicago <- schoolchicago %>%
rename(y = latitude, x = longitude) %>%
na.omit() %>%
st_as_sf(coords = c("x", "y"), crs = 4326, agr = "constant") %>%
st_transform(crs = "ESRI:102271")
View(schoolchicago)
# If you are renaming columns
schoolchicago <- schoolchicago %>%
rename(y = latitude, x = longitude) %>%
na.omit() %>%
View(schoolchicago)
# If you are renaming columns
schoolchicago <- schoolchicago %>%
rename(latitude = y, longitude = x) %>%
na.omit() %>%
st_as_sf(coords = c("x", "y"), crs = 4326, agr = "constant") %>%
st_transform(crs = "ESRI:102271")
#educsation
schoolchicago <- read.socrata("https://data.cityofchicago.org/resource/95e9-uzwt.json")
# If you are renaming columns
schoolchicago <- schoolchicago %>%
rename(latitude = y, longitude = x) %>%
na.omit() %>%
st_as_sf(coords = c("x", "y"), crs = 4326, agr = "constant") %>%
st_transform(crs = "ESRI:102271")
View(schoolchicago)
schoolchicago <- read.socrata("https://data.cityofchicago.org/resource/95e9-uzwt.json")
# If you are renaming columns
schoolchicago <- schoolchicago %>%
rename(y = latitude, x = longitude) %>%
na.omit() %>%
st_as_sf(coords = c("x", "y"), crs = 4326, agr = "constant") %>%
st_transform(crs = "ESRI:102271")
# Renaming and transforming the dataframe
schoolchicago <- schoolchicago %>%
rename(y = latitude, x = longitude) %>%
na.omit() %>%
st_as_sf(coords = c("x", "y"), crs = 4326, agr = "constant") %>%
st_transform(crs = "ESRI:102271")  # Make sure the CRS code is correct
# Renaming and transforming the dataframe
schoolchicago <- schoolchicago %>%
na.omit() %>%
st_as_sf(coords = c("x", "y"), crs = 4326, agr = "constant") %>%
st_transform(crs = "ESRI:102271")  # Make sure the CRS code is correct
View(schoolchicago)
# Renaming and transforming the dataframe
schoolchicago <- schoolchicago %>%
na.omit() %>%
st_as_sf(coords = c("x", "y"), crs = 4326, agr = "constant") %>%
st_transform(crs = "ESRI:102271")  # Make sure the CRS code is correct
dplyr::select(geometry)
schoolchicago <- schoolchicago %>%
dplyr::select(geometry)
View(schoolchicago)
# Renaming and transforming the dataframe
schoolchicago <- read.socrata("https://data.cityofchicago.org/resource/95e9-uzwt.json")
schoolchicago <- schoolchicago %>%
na.omit() %>%
st_as_sf(coords = c("x", "y"), crs = 4326, agr = "constant") %>%
st_transform(crs = "ESRI:102271")  # Make sure the CRS code is correct
schoolchicago <- schoolchicago %>%
dplyr::select(geometry)
View(schoolchicago)
# Renaming and transforming the dataframe
schoolchicago <- read.socrata("https://data.cityofchicago.org/resource/95e9-uzwt.json")
schoolchicago <- schoolchicago %>%
na.omit() %>%
st_as_sf(coords = c("x", "y"), crs = 4326, agr = "constant") %>%
st_transform(crs = "ESRI:102271")  # Make sure the CRS code is correct
View(schoolchicago)
schoolchicago <- read.socrata("https://data.cityofchicago.org/resource/95e9-uzwt.json")
View(schoolchicago)
schoolchicago <- schoolchicago %>%
na.omit() %>%
st_as_sf(coords = c("x", "y"), crs = 4326, agr = "constant") %>%
st_transform(crs = "ESRI:102271")  # Make sure the CRS code is correct
View(schoolchicago)
# Renaming and transforming the dataframe
schoolchicago <- read.socrata("https://data.cityofchicago.org/resource/95e9-uzwt.json")
schoolchicago <- schoolchicago %>%
dplyr::select(Y = y, X = x) %>%
na.omit() %>%
st_as_sf(coords = c("x", "y"), crs = 4326, agr = "constant") %>%
st_transform(crs = "ESRI:102271")  # Make sure the CRS code is correct
View(schoolchicago)
schoolchicago <- read.socrata("https://data.cityofchicago.org/resource/95e9-uzwt.json")
schoolchicago <- schoolchicago %>%
dplyr::select(Y = y, X = x) %>%
na.omit() %>%
st_as_sf(coords = c("X", "Y"), crs = 4326, agr = "constant") %>%
st_transform(crs = "ESRI:102271")  # Make sure the CRS code is correct
View(schoolchicago)
schoolchicago <- read.socrata("https://data.cityofchicago.org/resource/95e9-uzwt.json")
View(schoolchicago)
View(chicagonewhousingpermit)
View(educationfacilitieschicago)
View(restaurantchicago)
View(educationfacilitieschicago)
View(restaurantchicago)
View(educationfacilitieschicago)
View(chicagogrocerystore)
View(chicagogrocerystore_sf)
View(chicagonewhousingpermit)
# Renaming and transforming the dataframe
schoolchicago <- read.socrata("https://data.cityofchicago.org/resource/95e9-uzwt.json")
schoolchicago <- schoolchicago %>%
mutate(
the_geom.coordinates = as.character(the_geom.coordinates),  # Convert to character if not already
coords = sapply(the_geom.coordinates, function(x) {
# Remove 'c(' and ')' from the string, split by ', ', and convert to numeric
str <- gsub("c\\(|\\)", "", x)
as.numeric(strsplit(str, ", ")[[1]])
}, simplify = FALSE)  # Ensure output is a list
) %>%
na.omit()  # Remove rows with NA values possibly due to incorrect parsing
schoolchicago <- schoolchicago %>%
mutate(
lon = sapply(coords, function(x) x[1]),  # Extract first element as longitude
lat = sapply(coords, function(x) x[2])   # Extract second element as latitude
) %>%
select(-coords, -the_geom.coordinates)
# Convert to an sf object with proper coordinates
schoolchicago_sf <- st_as_sf(schoolchicago, coords = c("lon", "lat"), crs = 4326, agr = "constant")%>%
st_transform('ESRI:102271')
View(schoolchicago_sf)
# Convert to an sf object with proper coordinates
schoolchicago_sf <- st_as_sf(schoolchicago, coords = c("lon", "lat"), crs = 4326, agr = "constant")%>%
st_transform('ESRI:102271')
dplyr::select(geometry)
schoolchicago_sf <- schoolchicago_sf%>%
dplyr::select(geometry)
View(schoolchicago_sf)
# Fetch the data for LA, LA County, CA,2015
acs_la <- get_acs(
geography = "tract",
variables = variables,
year = 2015,
state = "17",
county = "031",
geometry = TRUE,
survey = "acs5",
output = "wide"
)%>%
st_transform('ESRI:102645')
census_api_key("f681592f0e7bc7e399e41102649c493ec7f7f574")
variables <- c("B01001_001E",
"B01001_002E",
"B01001_026E",
"B01001_007E",
"B01001_012E",
"B01001_016E",
"B01001_020E","B02001_002E","B02001_003E", "B03001_003E", "B02001_004E", "B19001_002E","B19001_003E", "B19001_006E", "B19001_008E",
"B19001_010E", "B19001_012E","B07001_001E","B07001_017E","B07001_033E",
"B07001_049E",
"B07001_065E",
"B15001_002E",
"B15001_003E",
"B15001_005E",
"B15001_009E",
"B15001_010E",
"B25001_001E",
"B06012_002E",
"B25002_003E",
"B25006_002E",
"B25006_001E",
"B19013_001E",
"B25077_001E",
"B25031_001",
"B08133_001"
)
# Fetch the data for LA, LA County, CA,2015
acs_la <- get_acs(
geography = "tract",
variables = variables,
year = 2015,
state = "06",
county = "037",
geometry = TRUE,
survey = "acs5",
output = "wide"
)%>%
st_transform('ESRI:102645')
# Fetch the data for LA, LA County, CA,2020
acs_la20 <- get_acs(
geography = "tract",
variables = variables,
year = 2020,
state = "06",
county = "037",
geometry = TRUE,
survey = "acs5",
output = "wide"
)%>%
st_transform('ESRI:102645')
vars <- load_variables(2020, "acs5", cache = TRUE)
# Fetch the data for LA, LA County, CA,2015
acs_chi <- get_acs(
geography = "tract",
variables = variables,
year = 2015,
state = "17",
county = "031",
geometry = TRUE,
survey = "acs5",
output = "wide"
)%>%
st_transform('ESRI:102645')
# Fetch the data for LA, LA County, CA,2020
acs_chi20 <- get_acs(
geography = "tract",
variables = variables,
year = 2020,
state = "17",
county = "031",
geometry = TRUE,
survey = "acs5",
output = "wide"
)%>%
st_transform('ESRI:102645')
# Fetch the data for LA, LA County, CA,2015
acs_chi <- get_acs(
geography = "tract",
variables = variables,
year = 2015,
state = "17",
county = "031",
geometry = TRUE,
survey = "acs5",
output = "wide"
)%>%
st_transform('ESRI:102645')
# Fetch the data for LA, LA County, CA,2020
acs_chi20 <- get_acs(
geography = "tract",
variables = variables,
year = 2020,
state = "17",
county = "031",
geometry = TRUE,
survey = "acs5",
output = "wide"
)%>%
st_transform('ESRI:102645')
vars <- load_variables(2020, "acs5", cache = TRUE)
# Fetch the data for LA, LA County, CA,2015
acs_chi <- get_acs(
geography = "tract",
variables = variables,
year = 2015,
state = "17",
county = "031",
geometry = TRUE,
survey = "acs5",
output = "wide"
)%>%
st_transform('ESRI:102645')
# Fetch the data for LA, LA County, CA,2020
acs_chi20 <- get_acs(
geography = "tract",
variables = variables,
year = 2020,
state = "17",
county = "031",
geometry = TRUE,
survey = "acs5",
output = "wide"
)%>%
st_transform('ESRI:102645')
vars <- load_variables(2020, "acs5", cache = TRUE)
# Drop Margin Columns from ACS
datachicago<-st_join(acs_chi,acs_chi20)
chicagoBoundary <- st_transform(chicagoBoundary, crs = st_crs(data))
# Read and process Chicago boundary data
chicagoBoundary <-
st_read(file.path(root.dir, "/Chapter5/chicagoBoundary.geojson")) %>%  # Read Chicago boundary data
st_transform('ESRI:102271')  # Transform coordinate reference system
# Drop Margin Columns from ACS
datachicago<-st_join(acs_chi,acs_chi20)
chicagoBoundary <- st_transform(chicagoBoundary, crs = st_crs(data))
# Drop Margin Columns from ACS
datachicago<-st_join(acs_chi,acs_chi20)
chicagoBoundary <- st_transform(chicagoBoundary, crs = st_crs(datachicago))
tractchicagoclipped <- st_intersection(datachicago, chicagoBoundary)
tractchicagogeography <- tractchicagoclipped%>%
dplyr::select(GEOID, geometry)
View(tractchicagoclipped)
census_api_key("f681592f0e7bc7e399e41102649c493ec7f7f574")
variables <- c("B01001_001E",
"B01001_002E",
"B01001_026E",
"B01001_007E",
"B01001_012E",
"B01001_016E",
"B01001_020E","B02001_002E","B02001_003E", "B03001_003E", "B02001_004E", "B19001_002E","B19001_003E", "B19001_006E", "B19001_008E",
"B19001_010E", "B19001_012E","B07001_001E","B07001_017E","B07001_033E",
"B07001_049E",
"B07001_065E",
"B15001_002E",
"B15001_003E",
"B15001_005E",
"B15001_009E",
"B15001_010E",
"B25001_001E",
"B06012_002E",
"B25002_003E",
"B25006_002E",
"B25006_001E",
"B19013_001E",
"B25077_001E",
"B25031_001",
"B08133_001"
)
# Fetch the data for LA, LA County, CA,2015
acs_la <- get_acs(
geography = "tract",
variables = variables,
year = 2015,
state = "06",
county = "037",
geometry = TRUE,
survey = "acs5",
output = "wide"
)%>%
st_transform('ESRI:102645')
# Fetch the data for LA, LA County, CA,2020
acs_la20 <- get_acs(
geography = "tract",
variables = variables,
year = 2020,
state = "06",
county = "037",
geometry = TRUE,
survey = "acs5",
output = "wide"
)%>%
st_transform('ESRI:102645')
vars <- load_variables(2020, "acs5", cache = TRUE)
# Read and process Chicago boundary data
chicagoBoundary <-
st_read(file.path(root.dir, "/Chapter5/chicagoBoundary.geojson")) %>%  # Read Chicago boundary data
st_transform('ESRI:102271')  # Transform coordinate reference system
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sf)
library(spdep)
library(caret)
library(ckanr)
library(FNN)
library(grid)
library(gridExtra)
library(ggcorrplot) # plot correlation plot
library(corrr)      # another way to plot correlation plot
library(kableExtra)
library(jtools)     # for regression model plots
library(ggstance) # to support jtools plots
library(ggpubr)    # plotting R^2 value on ggplot point scatter
library(broom.mixed) # needed for effects plots
library(RColorBrewer)
library(RSocrata)
library(RSocrata)
library(viridis)
library(spatstat)
library(spdep)
library(FNN)
library(knitr)
library(kableExtra)
library(tidycensus)
root.dir = "https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/DATA/"
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
palette5 <- c("#7892B5","#8CB9C0","#91B5A9","#EDCA7F","#D98481")
palette4 <- c("#7892B5","#8CB9C0","#EDCA7F","#D98481")
palette2 <- c("#7892B5","#D98481")
# Read and process Chicago boundary data
chicagoBoundary <-
st_read(file.path(root.dir, "/Chapter5/chicagoBoundary.geojson")) %>%  # Read Chicago boundary data
st_transform('ESRI:102271')  # Transform coordinate reference system
# Grocerystore
chicagogrocerystore <- read.socrata("https://data.cityofchicago.org/resource/3e26-zek2.json")
chicagogrocerystore <- chicagogrocerystore %>%
mutate(
location.coordinates = as.character(location.coordinates),  # Convert to character if not already
coords = sapply(location.coordinates, function(x) {
# Remove 'c(' and ')' from the string, split by ', ', and convert to numeric
str <- gsub("c\\(|\\)", "", x)
as.numeric(strsplit(str, ", ")[[1]])
}, simplify = FALSE)  # Ensure output is a list
) %>%
na.omit()  # Remove rows with NA values possibly due to incorrect parsing
chicagogrocerystore <- chicagogrocerystore %>%
mutate(
lon = sapply(coords, function(x) x[1]),  # Extract first element as longitude
lat = sapply(coords, function(x) x[2])   # Extract second element as latitude
) %>%
select(-coords, -location.coordinates)
# Convert to an sf object with proper coordinates
chicagogrocerystore_sf <- st_as_sf(chicagogrocerystore, coords = c("lon", "lat"), crs = 4326, agr = "constant")%>%
st_transform('ESRI:102271')
## New housing permit
chicagonewhousingpermit <- read.socrata("https://data.cityofchicago.org/resource/ydr8-5enu.json") %>%
chicagonewhousingpermit <- chicagonewhousingpermit %>%
mutate(issue_datenu = as.Date(issue_date, format = "%Y-%m-%d"))
## New housing permit
chicagonewhousingpermit <- read.socrata("https://data.cityofchicago.org/resource/ydr8-5enu.json") %>%
chicagonewhousingpermit <- chicagonewhousingpermit %>%
mutate(issue_datenu = as.Date(issue_date, format = "%Y-%m-%d"))
chicagonewhousingpermit <- read.socrata("https://data.cityofchicago.org/resource/ydr8-5enu.json") %>%
knitr::opts_chunk$set(echo = TRUE)
